/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { NotificationsNotification } from "./notifications/Notification.ts";
import type { NotificationsReadState } from "./notifications/ReadState.ts";
import type { ScalarsDatetime } from "./scalars/Datetime.ts";
import type { ScalarsId } from "./scalars/Id.ts";

export type ListNotificationsQueryParams = {
    /**
     * @minLength 1
     * @maxLength 50
     * @default 50
     * @type integer | undefined
    */
    pageSize?: number;
    /**
     * @minLength 0
     * @type integer | undefined
    */
    page?: number;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    userId?: ScalarsId;
    /**
     * @type string | undefined
    */
    readState?: NotificationsReadState;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdFrom?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdTo?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    validFrom?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    validTo?: ScalarsDatetime;
};

/**
 * @description The request has succeeded.
*/
export type ListNotifications200 = {
    /**
     * @description Will be calculated only if the \'page\' parameter is explicitly set to 0
     * @type integer | undefined
    */
    totalCount?: number;
    /**
     * @type array
    */
    data: NotificationsNotification[];
};

export type ListNotificationsQueryResponse = ListNotifications200;

export type ListNotificationsQuery = {
    Response: ListNotifications200;
    QueryParams: ListNotificationsQueryParams;
    Errors: any;
};