/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { JobApplicationsGender } from "./jobApplications/Gender.ts";
import type { JobPostingsJobType } from "./jobPostings/JobType.ts";
import type { JobPostingsJobWorkMode } from "./jobPostings/JobWorkMode.ts";
import type { JobPostingsProcessingState } from "./jobPostings/ProcessingState.ts";
import type { ScalarsDatetime } from "./scalars/Datetime.ts";
import type { ScalarsId } from "./scalars/Id.ts";
import type { ScalarsMoney } from "./scalars/Money.ts";
import type { ScalarsN } from "./scalars/N.ts";
import type { ScalarsStr50 } from "./scalars/Str50.ts";
import type { ScalarsStr100 } from "./scalars/Str100.ts";
import type { ScalarsStr200 } from "./scalars/Str200.ts";
import type { ScalarsStr1000 } from "./scalars/Str1000.ts";
import type { UsersUser } from "./users/User.ts";

export type ListJobPostingsQueryParams = {
    /**
     * @minLength 1
     * @maxLength 50
     * @default 50
     * @type integer | undefined
    */
    pageSize?: number;
    /**
     * @minLength 0
     * @type integer | undefined
    */
    page?: number;
    /**
     * @pattern ^(?!\s).{1,50}(?<!\s)$
     * @type string | undefined
    */
    name?: ScalarsStr50;
    /**
     * @pattern ^(?!\s).{1,50}(?<!\s)$
     * @type string | undefined
    */
    location?: ScalarsStr50;
    /**
     * @type string | undefined
    */
    type?: JobPostingsJobType;
    /**
     * @type string | undefined
    */
    workMode?: JobPostingsJobWorkMode;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    positionId?: ScalarsId;
    /**
     * @type string | undefined
    */
    processingState?: JobPostingsProcessingState;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdFrom?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdTo?: ScalarsDatetime;
    /**
     * @type boolean | undefined
    */
    preferredOnly?: boolean;
};

/**
 * @description The request has succeeded.
*/
export type ListJobPostings200 = {
    /**
     * @description Will be calculated only if the \'page\' parameter is explicitly set to 0
     * @type integer | undefined
    */
    totalCount?: number;
    /**
     * @type array
    */
    data: {
        /**
         * @description Must be a natural number
         * @type integer
        */
        id: ScalarsId;
        /**
         * @pattern ^(?!\s).{1,50}(?<!\s)$
         * @type string
        */
        name: ScalarsStr50;
        /**
         * @pattern ^(?!\s).{1,50}(?<!\s)$
         * @type string
        */
        location: ScalarsStr50;
        /**
         * @pattern ^(?!\s).{1,100}(?<!\s)$
         * @type string
        */
        logoPath: ScalarsStr100;
        /**
         * @type string
        */
        type: JobPostingsJobType;
        /**
         * @type string
        */
        workMode: JobPostingsJobWorkMode;
        /**
         * @pattern ^(?!\s).{1,1000}(?<!\s)$
         * @type string
        */
        descriptionMain: ScalarsStr1000;
        /**
         * @pattern ^(?!\s).{1,1000}(?<!\s)$
         * @type string
        */
        descriptionResponsibilities: ScalarsStr1000;
        /**
         * @pattern ^(?!\s).{1,1000}(?<!\s)$
         * @type string
        */
        descriptionQualifications: ScalarsStr1000;
        /**
         * @description Must be a natural number
         * @type integer
        */
        positionId: ScalarsId;
        questionDob: (ScalarsStr200 | null);
        questionGender: (ScalarsStr200 | null);
        questionExperienceYears: (ScalarsStr200 | null);
        questionQualificationLevel: (ScalarsStr200 | null);
        questionPreferredLocation: (ScalarsStr200 | null);
        questionExpectedSalary: (ScalarsStr200 | null);
        queryDobFrom: (ScalarsDatetime | null);
        queryDobTo: (ScalarsDatetime | null);
        queryGender: (JobApplicationsGender | null);
        queryExperienceYearsFrom: (ScalarsN | null);
        queryExperienceYearsTo: (ScalarsN | null);
        queryQualificationLevels: (ScalarsStr200 | null);
        queryPreferredLocation: (ScalarsStr50 | null);
        queryExpectedSalaryFrom: (ScalarsMoney | null);
        queryExpectedSalaryTo: (ScalarsMoney | null);
        /**
         * @type string
        */
        processingState: JobPostingsProcessingState;
        /**
         * @type string, date-time
        */
        createdAt: string;
        /**
         * @type string, date-time
        */
        updatedAt: string;
        /**
         * @type object
        */
        user: UsersUser;
    }[];
};

export type ListJobPostingsQueryResponse = ListJobPostings200;

export type ListJobPostingsQuery = {
    Response: ListJobPostings200;
    QueryParams: ListJobPostingsQueryParams;
    Errors: any;
};