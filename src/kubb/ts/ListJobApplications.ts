/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { JobApplicationsGender } from "./jobApplications/Gender.ts";
import type { JobApplicationsJobQualificationLevel } from "./jobApplications/JobQualificationLevel.ts";
import type { JobApplicationsProcessingState } from "./jobApplications/ProcessingState.ts";
import type { ScalarsDatetime } from "./scalars/Datetime.ts";
import type { ScalarsEmail } from "./scalars/Email.ts";
import type { ScalarsId } from "./scalars/Id.ts";
import type { ScalarsMobile } from "./scalars/Mobile.ts";
import type { ScalarsMoney } from "./scalars/Money.ts";
import type { ScalarsN } from "./scalars/N.ts";
import type { ScalarsStr15 } from "./scalars/Str15.ts";
import type { ScalarsStr50 } from "./scalars/Str50.ts";
import type { ScalarsStr100 } from "./scalars/Str100.ts";
import type { ScalarsStr200 } from "./scalars/Str200.ts";
import type { UsersUser } from "./users/User.ts";

export type ListJobApplicationsQueryParams = {
    /**
     * @minLength 1
     * @maxLength 50
     * @default 50
     * @type integer | undefined
    */
    pageSize?: number;
    /**
     * @minLength 0
     * @type integer | undefined
    */
    page?: number;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    jobPostingId?: ScalarsId;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    userId?: ScalarsId;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    dobFrom?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    dobTo?: ScalarsDatetime;
    /**
     * @type string | undefined
    */
    gender?: JobApplicationsGender;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    experienceYearsFrom?: ScalarsN;
    /**
     * @description Must be a natural number
     * @type integer | undefined
    */
    experienceYearsTo?: ScalarsN;
    /**
     * @pattern ^(?!\s).{1,200}(?<!\s)$
     * @type string | undefined
    */
    qualificationLevels?: ScalarsStr200;
    /**
     * @pattern ^(?!\s).{1,50}(?<!\s)$
     * @type string | undefined
    */
    preferredLocation?: ScalarsStr50;
    /**
     * @description Must be specified in cents
     * @type integer | undefined
    */
    expectedSalaryFrom?: ScalarsMoney;
    /**
     * @description Must be specified in cents
     * @type integer | undefined
    */
    expectedSalaryTo?: ScalarsMoney;
    /**
     * @type string | undefined
    */
    processingState?: JobApplicationsProcessingState;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdFrom?: ScalarsDatetime;
    /**
     * @description Must be a valid ISO 8601 string. No timezone offsets are allowed
     * @type string | undefined, date-time
    */
    createdTo?: ScalarsDatetime;
};

/**
 * @description The request has succeeded.
*/
export type ListJobApplications200 = {
    /**
     * @description Will be calculated only if the \'page\' parameter is explicitly set to 0
     * @type integer | undefined
    */
    totalCount?: number;
    /**
     * @type array
    */
    data: {
        /**
         * @description Must be a natural number
         * @type integer
        */
        id: ScalarsId;
        /**
         * @description Must be a natural number
         * @type integer
        */
        jobPostingId: ScalarsId;
        /**
         * @description Must be a natural number
         * @type integer
        */
        userId: ScalarsId;
        /**
         * @type string
        */
        firstName: string;
        /**
         * @type string
        */
        lastName: string;
        /**
         * @pattern ^(?!\s).{1,50}(?<!\s)$
         * @type string, email
        */
        email: ScalarsEmail;
        /**
         * @pattern ^(?!\s).{1,15}(?<!\s)$
         * @type string
        */
        nic: ScalarsStr15;
        /**
         * @pattern ^0\d{9}$
         * @type string
        */
        mobile: ScalarsMobile;
        /**
         * @pattern ^(?!\s).{1,100}(?<!\s)$
         * @type string
        */
        cvPath: ScalarsStr100;
        /**
         * @pattern ^(?!\s).{1,200}(?<!\s)$
         * @type string
        */
        address: ScalarsStr200;
        answerDob: (ScalarsDatetime | null);
        answerGender: (JobApplicationsGender | null);
        answerExperienceYears: (ScalarsN | null);
        answerQualificationLevel: (JobApplicationsJobQualificationLevel | null);
        answerPreferredLocation: (ScalarsStr50 | null);
        answerExpectedSalary: (ScalarsMoney | null);
        /**
         * @type string
        */
        processingState: JobApplicationsProcessingState;
        interview1At: (ScalarsDatetime | null);
        interview2At: (ScalarsDatetime | null);
        interview3At: (ScalarsDatetime | null);
        interview4At: (ScalarsDatetime | null);
        interview5At: (ScalarsDatetime | null);
        interview6At: (ScalarsDatetime | null);
        interview7At: (ScalarsDatetime | null);
        interview8At: (ScalarsDatetime | null);
        interview9At: (ScalarsDatetime | null);
        /**
         * @type string, date-time
        */
        createdAt: string;
        /**
         * @type string, date-time
        */
        updatedAt: string;
        /**
         * @type object
        */
        user: UsersUser;
    }[];
};

export type ListJobApplicationsQueryResponse = ListJobApplications200;

export type ListJobApplicationsQuery = {
    Response: ListJobApplications200;
    QueryParams: ListJobApplicationsQueryParams;
    Errors: any;
};